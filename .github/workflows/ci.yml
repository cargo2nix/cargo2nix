# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # nix flakes do not work on shallow clones
      - uses: cachix/install-nix-action@v15
        with:
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
      - uses: cachix/cachix-action@v10
        with:
          name: cargo2nix-gh
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          pushFilter: "(.drv.chroot$)"

      # Runs a single command using the runners shell
      - name: build cargo2nix
        run: |
          if [[ $RUNNER_OS == Linux ]]; then
            nix build
          else
            nix build \
              --override-input nixpkgs github:nixos/nixpkgs/nixpkgs-21.05-darwin
          fi

      - name: build tests
        run: nix build .#ci

      - name: build examples
        run: |
          if [[ $RUNNER_OS == Linux ]]; then
          nix build ./examples/1-hello-world# \
            --override-input cargo2nix github:cargo2nix/cargo2nix?rev=$GITHUB_SHA
          nix build ./examples/2-bigger-project# \
            --override-input cargo2nix github:cargo2nix/cargo2nix?rev=$GITHUB_SHA
          nix build ./examples/3-cross-compiling# \
            --override-input cargo2nix github:cargo2nix/cargo2nix?rev=$GITHUB_SHA
          nix build ./examples/4-independent-packaging# \
            --override-input cargo2nix github:cargo2nix/cargo2nix?rev=$GITHUB_SHA
          else
          nix build ./examples/1-hello-world#
            --override-input cargo2nix github:cargo2nix/cargo2nix?rev=$GITHUB_SHA \
            --override-input nixpkgs github:nixos/nixpkgs/nixpkgs-21.05-darwin
          nix build ./examples/2-bigger-project#
            --override-input cargo2nix github:cargo2nix/cargo2nix?rev=$GITHUB_SHA \
            --override-input nixpkgs github:nixos/nixpkgs/nixpkgs-21.05-darwin
          # nix build ./examples/3-cross-compiling#
          #   --override-input cargo2nix github:cargo2nix/cargo2nix?rev=$GITHUB_SHA \
          #   --override-input nixpkgs github:nixos/nixpkgs/nixpkgs-21.05-darwin
          # nix build ./examples/4-independent-packaging#
          #   --override-input cargo2nix github:cargo2nix/cargo2nix?rev=$GITHUB_SHA \
          #   --override-input nixpkgs github:nixos/nixpkgs/nixpkgs-21.05-darwin
          fi

      - name: use dev shell
        # enter the shell with no environment paths and verify that toolchain is available
        run: nix develop --ignore-environment --command "rustc" "--version"
